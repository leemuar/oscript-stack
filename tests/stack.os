#Использовать asserts

Функция ПолучитьСписокТестов(ТестПриложение) Экспорт
	Тесты = Новый Массив();

	Тесты.Добавить("ДолженСоздаватьсяОбъектСтека");
	Тесты.Добавить("ДолженИметьМетодCount");
	Тесты.Добавить("ПроверитьНовыйОбъектНеИмеетЭлементов");
	Тесты.Добавить("ДолженИметьМетодPush");
	Тесты.Добавить("ДолженДобавитьОдинЭлемент");
	Тесты.Добавить("ДобавлениеОдногоЭлементаУвеличиваетКоличествоНа1");
	Тесты.Добавить("ДобавлениеНесколькихЭлементовУвеличиваетКоличествоНаЧислоДобавленныхЭлементов");

	Возврат Тесты;
КонецФункции


Функция ДолженСоздаватьсяОбъектСтека() Экспорт

	Стек = Новый Стек;

	// очистим память
	ОсвободитьОбъект(Стек);
	
КонецФункции

Функция ДолженИметьМетодCount() Экспорт
	Перем Стек, Рефлектор;

	Стек = Новый Стек;
	Рефлектор = Новый Рефлектор;
	Ожидаем
		.Что(Рефлектор.МетодСуществует(Стек, "count"))
		.ЭтоИстина()
		;

	ОсвободитьОбъект(Стек);
	ОсвободитьОбъект(Рефлектор);
КонецФункции

Функция ПроверитьНовыйОбъектНеИмеетЭлементов() Экспорт
	Перем Стек;

	Стек = Новый Стек;
	Ожидаем
		.Что(Стек.count())
		.Равно(0)
		;

	ОсвободитьОбъект(Стек);
КонецФункции

Функция ДолженИметьМетодPush() Экспорт
	Перем Стек, Рефлектор;

	Рефлектор = Новый Рефлектор;
	Стек = Новый Стек;
	Ожидаем
		.Что(Рефлектор.МетодСуществует(Стек, "push"), "Метод не найден: push()")
		.ЭтоИстина()
		;

	ОсвободитьОбъект(Стек);
	ОсвободитьОбъект(Рефлектор);
КонецФункции

Функция ДолженДобавитьОдинЭлемент() Экспорт
	Перем Стек;

	Стек = Новый Стек;
	Стек.push(1);

	ОсвободитьОбъект(Стек);
КонецФункции

Функция ДобавлениеОдногоЭлементаУвеличиваетКоличествоНа1() Экспорт
	Перем Стек;

	Стек = Новый Стек;
	Стек.push(1);
	Ожидаем
		.Что(Стек.count(), "После добавления одного элемента в стек должно увеличиться количество элементов в нем")
		.Равно(1)
		;

	ОсвободитьОбъект(Стек);
КонецФункции

Функция ДобавлениеНесколькихЭлементовУвеличиваетКоличествоНаЧислоДобавленныхЭлементов() Экспорт
	Перем Стек, ЧислоЭлементов;

	ЧислоЭлементов = 17;
	Стек = Новый Стек;
	Для Сч = 1 По ЧислоЭлементов Цикл
		Стек.push(1);
	КонецЦикла;
	Ожидаем
		.Что(Стек.count())
		.Равно(ЧислоЭлементов)
		;

	ОсвободитьОбъект(Стек);
КонецФункции

Процедура Инициализация()
	ПодключитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, "..", "src", "stack.os"), "Стек");
КонецПроцедуры



Инициализация();